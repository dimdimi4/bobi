/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './app/routes/__root'
import { Route as CreateChannelImport } from './app/routes/create-channel'
import { Route as ChannelsImport } from './app/routes/channels'
import { Route as IndexImport } from './app/routes/index'
import { Route as AutomationsIndexImport } from './app/routes/automations/index'
import { Route as AutomationsAddImport } from './app/routes/automations/add'
import { Route as AutomationsIdViewImport } from './app/routes/automations/$id.view'
import { Route as AutomationsIdEditImport } from './app/routes/automations/$id.edit'

// Create/Update Routes

const CreateChannelRoute = CreateChannelImport.update({
  id: '/create-channel',
  path: '/create-channel',
  getParentRoute: () => rootRoute,
} as any)

const ChannelsRoute = ChannelsImport.update({
  id: '/channels',
  path: '/channels',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AutomationsIndexRoute = AutomationsIndexImport.update({
  id: '/automations/',
  path: '/automations/',
  getParentRoute: () => rootRoute,
} as any)

const AutomationsAddRoute = AutomationsAddImport.update({
  id: '/automations/add',
  path: '/automations/add',
  getParentRoute: () => rootRoute,
} as any)

const AutomationsIdViewRoute = AutomationsIdViewImport.update({
  id: '/automations/$id/view',
  path: '/automations/$id/view',
  getParentRoute: () => rootRoute,
} as any)

const AutomationsIdEditRoute = AutomationsIdEditImport.update({
  id: '/automations/$id/edit',
  path: '/automations/$id/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/channels': {
      id: '/channels'
      path: '/channels'
      fullPath: '/channels'
      preLoaderRoute: typeof ChannelsImport
      parentRoute: typeof rootRoute
    }
    '/create-channel': {
      id: '/create-channel'
      path: '/create-channel'
      fullPath: '/create-channel'
      preLoaderRoute: typeof CreateChannelImport
      parentRoute: typeof rootRoute
    }
    '/automations/add': {
      id: '/automations/add'
      path: '/automations/add'
      fullPath: '/automations/add'
      preLoaderRoute: typeof AutomationsAddImport
      parentRoute: typeof rootRoute
    }
    '/automations/': {
      id: '/automations/'
      path: '/automations'
      fullPath: '/automations'
      preLoaderRoute: typeof AutomationsIndexImport
      parentRoute: typeof rootRoute
    }
    '/automations/$id/edit': {
      id: '/automations/$id/edit'
      path: '/automations/$id/edit'
      fullPath: '/automations/$id/edit'
      preLoaderRoute: typeof AutomationsIdEditImport
      parentRoute: typeof rootRoute
    }
    '/automations/$id/view': {
      id: '/automations/$id/view'
      path: '/automations/$id/view'
      fullPath: '/automations/$id/view'
      preLoaderRoute: typeof AutomationsIdViewImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/channels': typeof ChannelsRoute
  '/create-channel': typeof CreateChannelRoute
  '/automations/add': typeof AutomationsAddRoute
  '/automations': typeof AutomationsIndexRoute
  '/automations/$id/edit': typeof AutomationsIdEditRoute
  '/automations/$id/view': typeof AutomationsIdViewRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/channels': typeof ChannelsRoute
  '/create-channel': typeof CreateChannelRoute
  '/automations/add': typeof AutomationsAddRoute
  '/automations': typeof AutomationsIndexRoute
  '/automations/$id/edit': typeof AutomationsIdEditRoute
  '/automations/$id/view': typeof AutomationsIdViewRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/channels': typeof ChannelsRoute
  '/create-channel': typeof CreateChannelRoute
  '/automations/add': typeof AutomationsAddRoute
  '/automations/': typeof AutomationsIndexRoute
  '/automations/$id/edit': typeof AutomationsIdEditRoute
  '/automations/$id/view': typeof AutomationsIdViewRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/channels'
    | '/create-channel'
    | '/automations/add'
    | '/automations'
    | '/automations/$id/edit'
    | '/automations/$id/view'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/channels'
    | '/create-channel'
    | '/automations/add'
    | '/automations'
    | '/automations/$id/edit'
    | '/automations/$id/view'
  id:
    | '__root__'
    | '/'
    | '/channels'
    | '/create-channel'
    | '/automations/add'
    | '/automations/'
    | '/automations/$id/edit'
    | '/automations/$id/view'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChannelsRoute: typeof ChannelsRoute
  CreateChannelRoute: typeof CreateChannelRoute
  AutomationsAddRoute: typeof AutomationsAddRoute
  AutomationsIndexRoute: typeof AutomationsIndexRoute
  AutomationsIdEditRoute: typeof AutomationsIdEditRoute
  AutomationsIdViewRoute: typeof AutomationsIdViewRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChannelsRoute: ChannelsRoute,
  CreateChannelRoute: CreateChannelRoute,
  AutomationsAddRoute: AutomationsAddRoute,
  AutomationsIndexRoute: AutomationsIndexRoute,
  AutomationsIdEditRoute: AutomationsIdEditRoute,
  AutomationsIdViewRoute: AutomationsIdViewRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/channels",
        "/create-channel",
        "/automations/add",
        "/automations/",
        "/automations/$id/edit",
        "/automations/$id/view"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/channels": {
      "filePath": "channels.tsx"
    },
    "/create-channel": {
      "filePath": "create-channel.tsx"
    },
    "/automations/add": {
      "filePath": "automations/add.tsx"
    },
    "/automations/": {
      "filePath": "automations/index.tsx"
    },
    "/automations/$id/edit": {
      "filePath": "automations/$id.edit.tsx"
    },
    "/automations/$id/view": {
      "filePath": "automations/$id.view.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
